<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\EvalBot.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\EvalBot.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Wed Dec 20 13:41:50 2023
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[0]">Reset_Handler</a>
 <LI><a href="#[4]">__main1</a>
 <LI><a href="#[13]">__main2</a>
 <LI><a href="#[14]">__mainM</a>
 <LI><a href="#[19]">BUMPERS_INIT</a>
 <LI><a href="#[1e]">READ_BUMPER1</a>
 <LI><a href="#[1f]">READ_BUMPER2</a>
 <LI><a href="#[1d]">READ_BUMPERS</a>
 <LI><a href="#[15]">LEDS_INIT</a>
 <LI><a href="#[1b]">LEDS_ON</a>
 <LI><a href="#[17]">LEDS_OFF</a>
 <LI><a href="#[18]">LEDS_SWITCH</a>
 <LI><a href="#[16]">LED4_ON</a>
 <LI><a href="#[21]">LED5_ON</a>
 <LI><a href="#[1a]">SWITCH_INIT</a>
 <LI><a href="#[1c]">READ_SWITCH1</a>
 <LI><a href="#[20]">READ_SWITCH2</a>
 <LI><a href="#[5]">__main</a>
 <LI><a href="#[6]">MOTEUR_INIT</a>
 <LI><a href="#[7]">MOTEUR_DROIT_ON</a>
 <LI><a href="#[8]">MOTEUR_DROIT_OFF</a>
 <LI><a href="#[9]">MOTEUR_GAUCHE_ON</a>
 <LI><a href="#[a]">MOTEUR_GAUCHE_OFF</a>
 <LI><a href="#[b]">MOTEUR_DROIT_ARRIERE</a>
 <LI><a href="#[c]">MOTEUR_DROIT_AVANT</a>
 <LI><a href="#[d]">MOTEUR_GAUCHE_ARRIERE</a>
 <LI><a href="#[e]">MOTEUR_GAUCHE_AVANT</a>
 <LI><a href="#[f]">MOTEUR_DROIT_INVERSE</a>
 <LI><a href="#[10]">MOTEUR_GAUCHE_INVERSE</a>
 <LI><a href="#[11]">SET_VITESSE_DEFAULT</a>
 <LI><a href="#[12]">SET_VITESSE_FORCING</a>
 <LI><a href="#[1]">NmiSR</a>
 <LI><a href="#[2]">FaultISR</a>
 <LI><a href="#[3]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NmiSR</a><BR>
 <LI><a href="#[2]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">FaultISR</a><BR>
 <LI><a href="#[3]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2]">FaultISR</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[3]">IntDefaultHandler</a> from startup.o(RESET) referenced 121 times from startup.o(RESET)
 <LI><a href="#[1]">NmiSR</a> from startup.o(RESET) referenced from startup.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup.o(RESET) referenced from startup.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>__main1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rk_blinky_1led.o(.text))

<P><STRONG><a name="[13]"></a>__main2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rk_blinky_2led_1.2.o(.text))

<P><STRONG><a name="[14]"></a>__mainM</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rk_priseenmain_moteurs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_INIT
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_GAUCHE_ON
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_GAUCHE_AVANT
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_DROIT_ON
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_DROIT_AVANT
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_DROIT_ARRIERE
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDS_SWITCH
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDS_OFF
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDS_INIT
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED4_ON
</UL>

<P><STRONG><a name="[19]"></a>BUMPERS_INIT</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bumper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1e]"></a>READ_BUMPER1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bumper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1f]"></a>READ_BUMPER2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bumper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1d]"></a>READ_BUMPERS</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bumper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[15]"></a>LEDS_INIT</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, leds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mainM
</UL>

<P><STRONG><a name="[1b]"></a>LEDS_ON</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, leds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[17]"></a>LEDS_OFF</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, leds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mainM
</UL>

<P><STRONG><a name="[18]"></a>LEDS_SWITCH</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, leds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mainM
</UL>

<P><STRONG><a name="[16]"></a>LED4_ON</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, leds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mainM
</UL>

<P><STRONG><a name="[21]"></a>LED5_ON</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, leds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1a]"></a>SWITCH_INIT</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, switch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1c]"></a>READ_SWITCH1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, switch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[20]"></a>READ_SWITCH2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, switch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[5]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_VITESSE_FORCING
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_VITESSE_DEFAULT
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_SWITCH2
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_SWITCH1
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWITCH_INIT
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_BUMPERS
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_BUMPER2
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_BUMPER1
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUMPERS_INIT
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_INIT
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_GAUCHE_ON
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_GAUCHE_OFF
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_GAUCHE_AVANT
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_GAUCHE_ARRIERE
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_DROIT_ON
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_DROIT_OFF
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_DROIT_AVANT
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTEUR_DROIT_ARRIERE
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDS_SWITCH
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDS_ON
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDS_OFF
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDS_INIT
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED5_ON
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED4_ON
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[6]"></a>MOTEUR_INIT</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, moteur.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mainM
</UL>

<P><STRONG><a name="[7]"></a>MOTEUR_DROIT_ON</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, moteur.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mainM
</UL>

<P><STRONG><a name="[8]"></a>MOTEUR_DROIT_OFF</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, moteur.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[9]"></a>MOTEUR_GAUCHE_ON</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, moteur.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mainM
</UL>

<P><STRONG><a name="[a]"></a>MOTEUR_GAUCHE_OFF</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, moteur.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[b]"></a>MOTEUR_DROIT_ARRIERE</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, moteur.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mainM
</UL>

<P><STRONG><a name="[c]"></a>MOTEUR_DROIT_AVANT</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, moteur.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mainM
</UL>

<P><STRONG><a name="[d]"></a>MOTEUR_GAUCHE_ARRIERE</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, moteur.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[e]"></a>MOTEUR_GAUCHE_AVANT</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, moteur.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mainM
</UL>

<P><STRONG><a name="[f]"></a>MOTEUR_DROIT_INVERSE</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, moteur.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[10]"></a>MOTEUR_GAUCHE_INVERSE</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, moteur.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[11]"></a>SET_VITESSE_DEFAULT</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, moteur.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[12]"></a>SET_VITESSE_FORCING</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, moteur.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
